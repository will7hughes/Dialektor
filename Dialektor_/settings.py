"""
Django settings for Dialektor_ project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from decouple import config
from google.oauth2 import service_account
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

SECRET_KEY = config('SECRET_KEY')
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = ['dialekt.appspot.com',
				'localhost',
                 '127.0.0.1',
                 '192.168.1.76']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'dialektor.apps.DialektorConfig',
    'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Dialektor_.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Dialektor_.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

if os.getenv('GAE_APPLICATION', None):
	# Running production, connect to GCP instance of PostgreSQL running in CloudSQL
	# This is a centralized production environment 
	DATABASES = {
		'default': {
			'ENGINE': config('PRODUCTION_ENGINE'),
			'HOST': config('PRODUCTION_HOST'),
			'NAME': config('PRODUCTION_DB_NAME'),
			'USER': config('PRODUCTION_USERNAME'),
			'PASSWORD': config('PRODUCTION_PASSWORD')
		}
	}
else:
	# Running development, connect to local PostgreSQL in our db Docker container
	# You must setup the database 'dialektorlocaldb' and user 'dialektoruser' in your db Docker container
	# Note that our Django app runs in the web Docker container, which is why our host is 'db' and not 'localhost'
	# This is just a local database, so the password need not be complex :)
	DATABASES = {
		'default': {
			'ENGINE': 'django.db.backends.postgresql_psycopg2',
			'HOST': 'db',
			'PORT': '5432',
			'NAME': 'dialektorlocaldb',
			'USER': 'dialektoruser',
			'PASSWORD': 'password'
		}
	}
# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = "./statics/"

STATICFILES_DIRS = [
    "./static_files_workbench",
    os.path.join(BASE_DIR, "static")
]

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = "/"

SITE_URL = "http://127.0.0.1:8000"

AUTH_USER_MODEL = "dialektor.CustomUser" 


# Settings for google cloud storage
DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
GS_BUCKET_NAME = 'dialektor_storage'
GS_PROJECT_ID = 'dialektor-302923'
GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    "./dialektor/GS_Credentials/Dialektor-0b847ed5c0ab.json")
